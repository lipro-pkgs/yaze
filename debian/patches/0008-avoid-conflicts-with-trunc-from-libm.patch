From 30f9bb1f2a0d83711a226f4dd17465514bb741b5 Mon Sep 17 00:00:00 2001
From: Stephan Linz <linz@li-pro.net>
Date: Mon, 1 Sep 2014 19:08:54 +0200
Subject: avoid conflicts with trunc() from libm

Signed-off-by: Stephan Linz <linz@li-pro.net>
---
 cdm.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/cdm.c b/cdm.c
index bbe59b7..a985da7 100644
--- a/cdm.c
+++ b/cdm.c
@@ -1007,7 +1007,7 @@ docreate(char *tok)
 
 /* Close out an extent.  Must be called with valid cf values */
 static void
-trunc(CFILE *cf)
+cdm_trunc(CFILE *cf)
 {
     int lex = cf->pos/(16*1024);	/* logical extent */
 
@@ -1063,7 +1063,7 @@ copycc(char *fn1, char *fn0)
 	    continue;
 	}
 	if (cf[0].pos != cf[1].pos)
-	    trunc(&cf[0]);
+	    cdm_trunc(&cf[0]);
 	cf[0].pos = cf[1].pos;
 	switch (getblock(&cf[0], 1)) {
 	case 0:
@@ -1081,7 +1081,7 @@ copycc(char *fn1, char *fn0)
 	cf[1].pos += minlen;
 	cf[0].pos += minlen;
     }
-    trunc(&cf[0]);
+    cdm_trunc(&cf[0]);
 }
 
 static int
@@ -1138,7 +1138,7 @@ copyuc(char *fn1, char *fn0)
     fclose(uf);
     while (cf.pos & 0x7f)
 	putcpm(0x1a, &cf);
-    trunc(&cf);
+    cdm_trunc(&cf);
 }
 
 /* copy CP/M file to unix file
